{"version":3,"file":"react-router-dom.development.js","sources":["../../../../packages/react-router-dom/index.tsx"],"sourcesContent":["import * as React from \"react\";\r\nimport type { BrowserHistory, HashHistory, History } from \"history\";\r\nimport { createBrowserHistory, createHashHistory, createPath } from \"history\";\r\nimport {\r\n  MemoryRouter,\r\n  Navigate,\r\n  Outlet,\r\n  Route,\r\n  Router,\r\n  Routes,\r\n  createRoutesFromChildren,\r\n  generatePath,\r\n  matchRoutes,\r\n  matchPath,\r\n  resolvePath,\r\n  renderMatches,\r\n  useHref,\r\n  useInRouterContext,\r\n  useLocation,\r\n  useMatch,\r\n  useNavigate,\r\n  useNavigationType,\r\n  useOutlet,\r\n  useParams,\r\n  useResolvedPath,\r\n  useRoutes,\r\n  useOutletContext\r\n} from \"react-router\";\r\nimport type { To } from \"react-router\";\r\n\r\nfunction warning(cond: boolean, message: string): void {\r\n  if (!cond) {\r\n    // eslint-disable-next-line no-console\r\n    if (typeof console !== \"undefined\") console.warn(message);\r\n\r\n    try {\r\n      // Welcome to debugging React Router!\r\n      //\r\n      // This error is thrown as a convenience so you can more easily\r\n      // find the source for a warning that appears in the console by\r\n      // enabling \"pause on exceptions\" in your JavaScript debugger.\r\n      throw new Error(message);\r\n      // eslint-disable-next-line no-empty\r\n    } catch (e) {}\r\n  }\r\n}\r\n\r\n////////////////////////////////////////////////////////////////////////////////\r\n// RE-EXPORTS\r\n////////////////////////////////////////////////////////////////////////////////\r\n\r\n// Note: Keep in sync with react-router exports!\r\nexport {\r\n  MemoryRouter,\r\n  Navigate,\r\n  Outlet,\r\n  Route,\r\n  Router,\r\n  Routes,\r\n  createRoutesFromChildren,\r\n  generatePath,\r\n  matchRoutes,\r\n  matchPath,\r\n  renderMatches,\r\n  resolvePath,\r\n  useHref,\r\n  useInRouterContext,\r\n  useLocation,\r\n  useMatch,\r\n  useNavigate,\r\n  useNavigationType,\r\n  useOutlet,\r\n  useParams,\r\n  useResolvedPath,\r\n  useRoutes,\r\n  useOutletContext\r\n};\r\n\r\nexport type {\r\n  Location,\r\n  Path,\r\n  To,\r\n  NavigationType,\r\n  MemoryRouterProps,\r\n  NavigateFunction,\r\n  NavigateOptions,\r\n  NavigateProps,\r\n  Navigator,\r\n  OutletProps,\r\n  Params,\r\n  PathMatch,\r\n  RouteMatch,\r\n  RouteObject,\r\n  RouteProps,\r\n  PathRouteProps,\r\n  LayoutRouteProps,\r\n  IndexRouteProps,\r\n  RouterProps,\r\n  RoutesProps\r\n} from \"react-router\";\r\n\r\n///////////////////////////////////////////////////////////////////////////////\r\n// DANGER! PLEASE READ ME!\r\n// We provide these exports as an escape hatch in the event that you need any\r\n// routing data that we don't provide an explicit API for. With that said, we\r\n// want to cover your use case if we can, so if you feel the need to use these\r\n// we want to hear from you. Let us know what you're building and we'll do our\r\n// best to make sure we can support you!\r\n//\r\n// We consider these exports an implementation detail and do not guarantee\r\n// against any breaking changes, regardless of the semver release. Use with\r\n// extreme caution and only if you understand the consequences. Godspeed.\r\n///////////////////////////////////////////////////////////////////////////////\r\n\r\n/** @internal */\r\nexport {\r\n  UNSAFE_NavigationContext,\r\n  UNSAFE_LocationContext,\r\n  UNSAFE_RouteContext\r\n} from \"react-router\";\r\n\r\n////////////////////////////////////////////////////////////////////////////////\r\n// COMPONENTS\r\n////////////////////////////////////////////////////////////////////////////////\r\n\r\nexport interface BrowserRouterProps {\r\n  basename?: string;\r\n  children?: React.ReactNode;\r\n  window?: Window;\r\n}\r\n\r\n/**\r\n * A `<Router>` for use in web browsers. Provides the cleanest URLs.\r\n */\r\nexport function BrowserRouter({\r\n  basename,\r\n  children,\r\n  window\r\n}: BrowserRouterProps) {\r\n  let historyRef = React.useRef<BrowserHistory>();\r\n  if (historyRef.current == null) {\r\n    historyRef.current = createBrowserHistory({ window });\r\n  }\r\n\r\n  let history = historyRef.current;\r\n  let [state, setState] = React.useState({\r\n    action: history.action,\r\n    location: history.location\r\n  });\r\n\r\n  React.useLayoutEffect(() => history.listen(setState), [history]);\r\n\r\n  return (\r\n    <Router\r\n      basename={basename}\r\n      children={children}\r\n      location={state.location}\r\n      navigationType={state.action}\r\n      navigator={history}\r\n    />\r\n  );\r\n}\r\n\r\nexport interface HashRouterProps {\r\n  basename?: string;\r\n  children?: React.ReactNode;\r\n  window?: Window;\r\n}\r\n\r\n/**\r\n * A `<Router>` for use in web browsers. Stores the location in the hash\r\n * portion of the URL so it is not sent to the server.\r\n */\r\nexport function HashRouter({ basename, children, window }: HashRouterProps) {\r\n  let historyRef = React.useRef<HashHistory>();\r\n  if (historyRef.current == null) {\r\n    historyRef.current = createHashHistory({ window });\r\n  }\r\n\r\n  let history = historyRef.current;\r\n  let [state, setState] = React.useState({\r\n    action: history.action,\r\n    location: history.location\r\n  });\r\n\r\n  React.useLayoutEffect(() => history.listen(setState), [history]);\r\n\r\n  return (\r\n    <Router\r\n      basename={basename}\r\n      children={children}\r\n      location={state.location}\r\n      navigationType={state.action}\r\n      navigator={history}\r\n    />\r\n  );\r\n}\r\n\r\nexport interface HistoryRouterProps {\r\n  basename?: string;\r\n  children?: React.ReactNode;\r\n  history: History;\r\n}\r\n\r\n/**\r\n * A `<Router>` that accepts a pre-instantiated history object. It's important\r\n * to note that using your own history object is highly discouraged and may add\r\n * two versions of the history library to your bundles unless you use the same\r\n * version of the history library that React Router uses internally.\r\n */\r\nfunction HistoryRouter({ basename, children, history }: HistoryRouterProps) {\r\n  const [state, setState] = React.useState({\r\n    action: history.action,\r\n    location: history.location\r\n  });\r\n\r\n  React.useLayoutEffect(() => history.listen(setState), [history]);\r\n\r\n  return (\r\n    <Router\r\n      basename={basename}\r\n      children={children}\r\n      location={state.location}\r\n      navigationType={state.action}\r\n      navigator={history}\r\n    />\r\n  );\r\n}\r\n\r\nif (__DEV__) {\r\n  HistoryRouter.displayName = \"unstable_HistoryRouter\";\r\n}\r\n\r\nexport { HistoryRouter as unstable_HistoryRouter };\r\n\r\nfunction isModifiedEvent(event: React.MouseEvent) {\r\n  return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);\r\n}\r\n\r\nexport interface LinkProps\r\n  extends Omit<React.AnchorHTMLAttributes<HTMLAnchorElement>, \"href\"> {\r\n  reloadDocument?: boolean;\r\n  replace?: boolean;\r\n  state?: any;\r\n  to: To;\r\n}\r\n\r\n/**\r\n * The public API for rendering a history-aware <a>.\r\n */\r\nexport const Link = React.forwardRef<HTMLAnchorElement, LinkProps>(\r\n  function LinkWithRef(\r\n    { onClick, reloadDocument, replace = false, state, target, to, ...rest },\r\n    ref\r\n  ) {\r\n    let href = useHref(to);\r\n    let internalOnClick = useLinkClickHandler(to, { replace, state, target });\r\n    function handleClick(\r\n      event: React.MouseEvent<HTMLAnchorElement, MouseEvent>\r\n    ) {\r\n      if (onClick) onClick(event);\r\n      if (!event.defaultPrevented && !reloadDocument) {\r\n        internalOnClick(event);\r\n      }\r\n    }\r\n\r\n    return (\r\n      // eslint-disable-next-line jsx-a11y/anchor-has-content\r\n      <a\r\n        {...rest}\r\n        href={href}\r\n        onClick={handleClick}\r\n        ref={ref}\r\n        target={target}\r\n      />\r\n    );\r\n  }\r\n);\r\n\r\nif (__DEV__) {\r\n  Link.displayName = \"Link\";\r\n}\r\n\r\nexport interface NavLinkProps\r\n  extends Omit<LinkProps, \"className\" | \"style\" | \"children\"> {\r\n  children:\r\n    | React.ReactNode\r\n    | ((props: { isActive: boolean }) => React.ReactNode);\r\n  caseSensitive?: boolean;\r\n  className?: string | ((props: { isActive: boolean }) => string);\r\n  end?: boolean;\r\n  style?:\r\n    | React.CSSProperties\r\n    | ((props: { isActive: boolean }) => React.CSSProperties);\r\n}\r\n\r\n/**\r\n * A <Link> wrapper that knows if it's \"active\" or not.\r\n */\r\nexport const NavLink = React.forwardRef<HTMLAnchorElement, NavLinkProps>(\r\n  function NavLinkWithRef(\r\n    {\r\n      \"aria-current\": ariaCurrentProp = \"page\",\r\n      caseSensitive = false,\r\n      className: classNameProp = \"\",\r\n      end = false,\r\n      style: styleProp,\r\n      to,\r\n      children,\r\n      ...rest\r\n    },\r\n    ref\r\n  ) {\r\n    let location = useLocation();\r\n    let path = useResolvedPath(to);\r\n\r\n    let locationPathname = location.pathname;\r\n    let toPathname = path.pathname;\r\n    if (!caseSensitive) {\r\n      locationPathname = locationPathname.toLowerCase();\r\n      toPathname = toPathname.toLowerCase();\r\n    }\r\n\r\n    let isActive =\r\n      locationPathname === toPathname ||\r\n      (!end &&\r\n        locationPathname.startsWith(toPathname) &&\r\n        locationPathname.charAt(toPathname.length) === \"/\");\r\n\r\n    let ariaCurrent = isActive ? ariaCurrentProp : undefined;\r\n\r\n    let className: string;\r\n    if (typeof classNameProp === \"function\") {\r\n      className = classNameProp({ isActive });\r\n    } else {\r\n      // If the className prop is not a function, we use a default `active`\r\n      // class for <NavLink />s that are active. In v5 `active` was the default\r\n      // value for `activeClassName`, but we are removing that API and can still\r\n      // use the old default behavior for a cleaner upgrade path and keep the\r\n      // simple styling rules working as they currently do.\r\n      className = [classNameProp, isActive ? \"active\" : null]\r\n        .filter(Boolean)\r\n        .join(\" \");\r\n    }\r\n\r\n    let style =\r\n      typeof styleProp === \"function\" ? styleProp({ isActive }) : styleProp;\r\n\r\n    return (\r\n      <Link\r\n        {...rest}\r\n        aria-current={ariaCurrent}\r\n        className={className}\r\n        ref={ref}\r\n        style={style}\r\n        to={to}\r\n      >\r\n        {typeof children === \"function\" ? children({ isActive }) : children}\r\n      </Link>\r\n    );\r\n  }\r\n);\r\n\r\nif (__DEV__) {\r\n  NavLink.displayName = \"NavLink\";\r\n}\r\n\r\n////////////////////////////////////////////////////////////////////////////////\r\n// HOOKS\r\n////////////////////////////////////////////////////////////////////////////////\r\n\r\n/**\r\n * Handles the click behavior for router `<Link>` components. This is useful if\r\n * you need to create custom `<Link>` components with the same click behavior we\r\n * use in our exported `<Link>`.\r\n */\r\nexport function useLinkClickHandler<E extends Element = HTMLAnchorElement>(\r\n  to: To,\r\n  {\r\n    target,\r\n    replace: replaceProp,\r\n    state\r\n  }: {\r\n    target?: React.HTMLAttributeAnchorTarget;\r\n    replace?: boolean;\r\n    state?: any;\r\n  } = {}\r\n): (event: React.MouseEvent<E, MouseEvent>) => void {\r\n  let navigate = useNavigate();\r\n  let location = useLocation();\r\n  let path = useResolvedPath(to);\r\n\r\n  return React.useCallback(\r\n    (event: React.MouseEvent<E, MouseEvent>) => {\r\n      if (\r\n        event.button === 0 && // Ignore everything but left clicks\r\n        (!target || target === \"_self\") && // Let browser handle \"target=_blank\" etc.\r\n        !isModifiedEvent(event) // Ignore clicks with modifier keys\r\n      ) {\r\n        event.preventDefault();\r\n\r\n        // If the URL hasn't changed, a regular <a> will do a replace instead of\r\n        // a push, so do the same here.\r\n        let replace =\r\n          !!replaceProp || createPath(location) === createPath(path);\r\n\r\n        navigate(to, { replace, state });\r\n      }\r\n    },\r\n    [location, navigate, path, replaceProp, state, target, to]\r\n  );\r\n}\r\n\r\n/**\r\n * A convenient wrapper for reading and writing search parameters via the\r\n * URLSearchParams interface.\r\n */\r\nexport function useSearchParams(defaultInit?: URLSearchParamsInit) {\r\n  warning(\r\n    typeof URLSearchParams !== \"undefined\",\r\n    `You cannot use the \\`useSearchParams\\` hook in a browser that does not ` +\r\n      `support the URLSearchParams API. If you need to support Internet ` +\r\n      `Explorer 11, we recommend you load a polyfill such as ` +\r\n      `https://github.com/ungap/url-search-params\\n\\n` +\r\n      `If you're unsure how to load polyfills, we recommend you check out ` +\r\n      `https://polyfill.io/v3/ which provides some recommendations about how ` +\r\n      `to load polyfills only for users that need them, instead of for every ` +\r\n      `user.`\r\n  );\r\n\r\n  let defaultSearchParamsRef = React.useRef(createSearchParams(defaultInit));\r\n\r\n  let location = useLocation();\r\n  let searchParams = React.useMemo(() => {\r\n    let searchParams = createSearchParams(location.search);\r\n\r\n    for (let key of defaultSearchParamsRef.current.keys()) {\r\n      if (!searchParams.has(key)) {\r\n        defaultSearchParamsRef.current.getAll(key).forEach(value => {\r\n          searchParams.append(key, value);\r\n        });\r\n      }\r\n    }\r\n\r\n    return searchParams;\r\n  }, [location.search]);\r\n\r\n  let navigate = useNavigate();\r\n  let setSearchParams = React.useCallback(\r\n    (\r\n      nextInit: URLSearchParamsInit,\r\n      navigateOptions?: { replace?: boolean; state?: any }\r\n    ) => {\r\n      navigate(\"?\" + createSearchParams(nextInit), navigateOptions);\r\n    },\r\n    [navigate]\r\n  );\r\n\r\n  return [searchParams, setSearchParams] as const;\r\n}\r\n\r\nexport type ParamKeyValuePair = [string, string];\r\n\r\nexport type URLSearchParamsInit =\r\n  | string\r\n  | ParamKeyValuePair[]\r\n  | Record<string, string | string[]>\r\n  | URLSearchParams;\r\n\r\n/**\r\n * Creates a URLSearchParams object using the given initializer.\r\n *\r\n * This is identical to `new URLSearchParams(init)` except it also\r\n * supports arrays as values in the object form of the initializer\r\n * instead of just strings. This is convenient when you need multiple\r\n * values for a given key, but don't want to use an array initializer.\r\n *\r\n * For example, instead of:\r\n *\r\n *   let searchParams = new URLSearchParams([\r\n *     ['sort', 'name'],\r\n *     ['sort', 'price']\r\n *   ]);\r\n *\r\n * you can do:\r\n *\r\n *   let searchParams = createSearchParams({\r\n *     sort: ['name', 'price']\r\n *   });\r\n */\r\nexport function createSearchParams(\r\n  init: URLSearchParamsInit = \"\"\r\n): URLSearchParams {\r\n  return new URLSearchParams(\r\n    typeof init === \"string\" ||\r\n    Array.isArray(init) ||\r\n    init instanceof URLSearchParams\r\n      ? init\r\n      : Object.keys(init).reduce((memo, key) => {\r\n          let value = init[key];\r\n          return memo.concat(\r\n            Array.isArray(value) ? value.map(v => [key, v]) : [[key, value]]\r\n          );\r\n        }, [] as ParamKeyValuePair[])\r\n  );\r\n}\r\n"],"names":["warning","cond","message","console","warn","Error","e","BrowserRouter","basename","children","window","historyRef","React","current","createBrowserHistory","history","state","setState","action","location","listen","React.createElement","Router","HashRouter","createHashHistory","HistoryRouter","displayName","isModifiedEvent","event","metaKey","altKey","ctrlKey","shiftKey","Link","LinkWithRef","ref","onClick","reloadDocument","replace","target","to","rest","href","useHref","internalOnClick","useLinkClickHandler","handleClick","defaultPrevented","NavLink","NavLinkWithRef","ariaCurrentProp","caseSensitive","className","classNameProp","end","style","styleProp","useLocation","path","useResolvedPath","locationPathname","pathname","toPathname","toLowerCase","isActive","startsWith","charAt","length","ariaCurrent","undefined","filter","Boolean","join","replaceProp","navigate","useNavigate","button","preventDefault","createPath","useSearchParams","defaultInit","URLSearchParams","defaultSearchParamsRef","createSearchParams","searchParams","search","key","keys","has","getAll","forEach","value","append","setSearchParams","nextInit","navigateOptions","init","Array","isArray","Object","reduce","memo","concat","map","v"],"mappings":"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"}