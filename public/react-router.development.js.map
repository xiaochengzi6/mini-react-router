{"version":3,"file":"react-router.development.js","sources":["../../../../packages/react-router/index.tsx"],"sourcesContent":["import * as React from \"react\";\r\nimport type {\r\n  History,\r\n  InitialEntry,\r\n  Location,\r\n  MemoryHistory,\r\n  Path,\r\n  To\r\n} from \"history\";\r\nimport {\r\n  Action as NavigationType,\r\n  createMemoryHistory,\r\n  parsePath\r\n} from \"history\";\r\n\r\nexport type { Location, Path, To, NavigationType };\r\n\r\nfunction invariant(cond: any, message: string): asserts cond {\r\n  if (!cond) throw new Error(message);\r\n}\r\n\r\nfunction warning(cond: any, message: string): void {\r\n  if (!cond) {\r\n    // eslint-disable-next-line no-console\r\n    if (typeof console !== \"undefined\") console.warn(message);\r\n\r\n    try {\r\n      // Welcome to debugging React Router!\r\n      //\r\n      // This error is thrown as a convenience so you can more easily\r\n      // find the source for a warning that appears in the console by\r\n      // enabling \"pause on exceptions\" in your JavaScript debugger.\r\n      throw new Error(message);\r\n      // eslint-disable-next-line no-empty\r\n    } catch (e) {}\r\n  }\r\n}\r\n\r\nconst alreadyWarned: Record<string, boolean> = {};\r\nfunction warningOnce(key: string, cond: boolean, message: string) {\r\n  if (!cond && !alreadyWarned[key]) {\r\n    alreadyWarned[key] = true;\r\n    warning(false, message);\r\n  }\r\n}\r\n\r\n///////////////////////////////////////////////////////////////////////////////\r\n// CONTEXT\r\n///////////////////////////////////////////////////////////////////////////////\r\n\r\n/**\r\n * A Navigator is a \"location changer\"; it's how you get to different locations.\r\n *\r\n * Every history instance conforms to the Navigator interface, but the\r\n * distinction is useful primarily when it comes to the low-level <Router> API\r\n * where both the location and a navigator must be provided separately in order\r\n * to avoid \"tearing\" that may occur in a suspense-enabled app if the action\r\n * and/or location were to be read directly from the history instance.\r\n */\r\nexport type Navigator = Pick<History, \"go\" | \"push\" | \"replace\" | \"createHref\">;\r\n\r\ninterface NavigationContextObject {\r\n  basename: string;\r\n  navigator: Navigator;\r\n  static: boolean;\r\n}\r\n\r\nconst NavigationContext = React.createContext<NavigationContextObject>(null!);\r\n\r\nif (__DEV__) {\r\n  NavigationContext.displayName = \"Navigation\";\r\n}\r\n\r\ninterface LocationContextObject {\r\n  location: Location;\r\n  navigationType: NavigationType;\r\n}\r\n\r\nconst LocationContext = React.createContext<LocationContextObject>(null!);\r\n\r\nif (__DEV__) {\r\n  LocationContext.displayName = \"Location\";\r\n}\r\n\r\ninterface RouteContextObject {\r\n  outlet: React.ReactElement | null;\r\n  matches: RouteMatch[];\r\n}\r\n\r\nconst RouteContext = React.createContext<RouteContextObject>({\r\n  outlet: null,\r\n  matches: []\r\n});\r\n\r\nif (__DEV__) {\r\n  RouteContext.displayName = \"Route\";\r\n}\r\n\r\n///////////////////////////////////////////////////////////////////////////////\r\n// COMPONENTS\r\n///////////////////////////////////////////////////////////////////////////////\r\n\r\nexport interface MemoryRouterProps {\r\n  basename?: string;\r\n  children?: React.ReactNode;\r\n  initialEntries?: InitialEntry[];\r\n  initialIndex?: number;\r\n}\r\n\r\n/**\r\n * A <Router> that stores all entries in memory.\r\n *\r\n * @see https://reactrouter.com/docs/en/v6/api#memoryrouter\r\n */\r\nexport function MemoryRouter({\r\n  basename,\r\n  children,\r\n  initialEntries,\r\n  initialIndex\r\n}: MemoryRouterProps): React.ReactElement {\r\n  let historyRef = React.useRef<MemoryHistory>();\r\n  if (historyRef.current == null) {\r\n    historyRef.current = createMemoryHistory({ initialEntries, initialIndex });\r\n  }\r\n\r\n  let history = historyRef.current;\r\n  let [state, setState] = React.useState({\r\n    action: history.action,\r\n    location: history.location\r\n  });\r\n\r\n  React.useLayoutEffect(() => history.listen(setState), [history]);\r\n\r\n  return (\r\n    <Router\r\n      basename={basename}\r\n      children={children}\r\n      location={state.location}\r\n      navigationType={state.action}\r\n      navigator={history}\r\n    />\r\n  );\r\n}\r\n\r\nexport interface NavigateProps {\r\n  to: To;\r\n  replace?: boolean;\r\n  state?: any;\r\n}\r\n\r\n/**\r\n * Changes the current location.\r\n *\r\n * Note: This API is mostly useful in React.Component subclasses that are not\r\n * able to use hooks. In functional components, we recommend you use the\r\n * `useNavigate` hook instead.\r\n *\r\n * @see https://reactrouter.com/docs/en/v6/api#navigate\r\n */\r\nexport function Navigate({ to, replace, state }: NavigateProps): null {\r\n  invariant(\r\n    useInRouterContext(),\r\n    // TODO: This error is probably because they somehow have 2 versions of\r\n    // the router loaded. We can help them understand how to avoid that.\r\n    `<Navigate> may be used only in the context of a <Router> component.`\r\n  );\r\n\r\n  warning(\r\n    !React.useContext(NavigationContext).static,\r\n    `<Navigate> must not be used on the initial render in a <StaticRouter>. ` +\r\n      `This is a no-op, but you should modify your code so the <Navigate> is ` +\r\n      `only ever rendered in response to some user interaction or state change.`\r\n  );\r\n\r\n  let navigate = useNavigate();\r\n  React.useEffect(() => {\r\n    navigate(to, { replace, state });\r\n  });\r\n\r\n  return null;\r\n}\r\n\r\nexport interface OutletProps {\r\n  context?: unknown;\r\n}\r\n\r\n/**\r\n * Renders the child route's element, if there is one.\r\n *\r\n * @see https://reactrouter.com/docs/en/v6/api#outlet\r\n */\r\nexport function Outlet(props: OutletProps): React.ReactElement | null {\r\n  return useOutlet(props.context);\r\n}\r\n\r\nexport interface RouteProps {\r\n  caseSensitive?: boolean;\r\n  children?: React.ReactNode;\r\n  element?: React.ReactNode | null;\r\n  index?: boolean;\r\n  path?: string;\r\n}\r\n\r\nexport interface PathRouteProps {\r\n  caseSensitive?: boolean;\r\n  children?: React.ReactNode;\r\n  element?: React.ReactNode | null;\r\n  index?: false;\r\n  path: string;\r\n}\r\n\r\nexport interface LayoutRouteProps {\r\n  children?: React.ReactNode;\r\n  element?: React.ReactNode | null;\r\n}\r\n\r\nexport interface IndexRouteProps {\r\n  element?: React.ReactNode | null;\r\n  index: true;\r\n}\r\n\r\n/**\r\n * Declares an element that should be rendered at a certain URL path.\r\n *\r\n * @see https://reactrouter.com/docs/en/v6/api#route\r\n */\r\nexport function Route(\r\n  _props: PathRouteProps | LayoutRouteProps | IndexRouteProps\r\n): React.ReactElement | null {\r\n  invariant(\r\n    false,\r\n    `A <Route> is only ever to be used as the child of <Routes> element, ` +\r\n      `never rendered directly. Please wrap your <Route> in a <Routes>.`\r\n  );\r\n}\r\n\r\nexport interface RouterProps {\r\n  basename?: string;\r\n  children?: React.ReactNode;\r\n  location: Partial<Location> | string;\r\n  navigationType?: NavigationType;\r\n  navigator: Navigator;\r\n  static?: boolean;\r\n}\r\n\r\n/**\r\n * Provides location context for the rest of the app.\r\n *\r\n * Note: You usually won't render a <Router> directly. Instead, you'll render a\r\n * router that is more specific to your environment such as a <BrowserRouter>\r\n * in web browsers or a <StaticRouter> for server rendering.\r\n *\r\n * @see https://reactrouter.com/docs/en/v6/api#router\r\n */\r\nexport function Router({\r\n  basename: basenameProp = \"/\",\r\n  children = null,\r\n  location: locationProp,\r\n  navigationType = NavigationType.Pop,\r\n  navigator,\r\n  static: staticProp = false\r\n}: RouterProps): React.ReactElement | null {\r\n  invariant(\r\n    !useInRouterContext(),\r\n    `You cannot render a <Router> inside another <Router>.` +\r\n      ` You should never have more than one in your app.`\r\n  );\r\n\r\n  let basename = normalizePathname(basenameProp);\r\n  let navigationContext = React.useMemo(\r\n    () => ({ basename, navigator, static: staticProp }),\r\n    [basename, navigator, staticProp]\r\n  );\r\n\r\n  if (typeof locationProp === \"string\") {\r\n    locationProp = parsePath(locationProp);\r\n  }\r\n\r\n  let {\r\n    pathname = \"/\",\r\n    search = \"\",\r\n    hash = \"\",\r\n    state = null,\r\n    key = \"default\"\r\n  } = locationProp;\r\n\r\n  let location = React.useMemo(() => {\r\n    let trailingPathname = stripBasename(pathname, basename);\r\n\r\n    if (trailingPathname == null) {\r\n      return null;\r\n    }\r\n\r\n    return {\r\n      pathname: trailingPathname,\r\n      search,\r\n      hash,\r\n      state,\r\n      key\r\n    };\r\n  }, [basename, pathname, search, hash, state, key]);\r\n\r\n  warning(\r\n    location != null,\r\n    `<Router basename=\"${basename}\"> is not able to match the URL ` +\r\n      `\"${pathname}${search}${hash}\" because it does not start with the ` +\r\n      `basename, so the <Router> won't render anything.`\r\n  );\r\n\r\n  if (location == null) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <NavigationContext.Provider value={navigationContext}>\r\n      <LocationContext.Provider\r\n        children={children}\r\n        value={{ location, navigationType }}\r\n      />\r\n    </NavigationContext.Provider>\r\n  );\r\n}\r\n\r\nexport interface RoutesProps {\r\n  children?: React.ReactNode;\r\n  location?: Partial<Location> | string;\r\n}\r\n\r\n/**\r\n * A container for a nested tree of <Route> elements that renders the branch\r\n * that best matches the current location.\r\n *\r\n * @see https://reactrouter.com/docs/en/v6/api#routes\r\n */\r\nexport function Routes({\r\n  children,\r\n  location\r\n}: RoutesProps): React.ReactElement | null {\r\n  return useRoutes(createRoutesFromChildren(children), location);\r\n}\r\n\r\n///////////////////////////////////////////////////////////////////////////////\r\n// HOOKS\r\n///////////////////////////////////////////////////////////////////////////////\r\n\r\n/**\r\n * Returns the full href for the given \"to\" value. This is useful for building\r\n * custom links that are also accessible and preserve right-click behavior.\r\n *\r\n * @see https://reactrouter.com/docs/en/v6/api#usehref\r\n */\r\nexport function useHref(to: To): string {\r\n  invariant(\r\n    useInRouterContext(),\r\n    // TODO: This error is probably because they somehow have 2 versions of the\r\n    // router loaded. We can help them understand how to avoid that.\r\n    `useHref() may be used only in the context of a <Router> component.`\r\n  );\r\n\r\n  let { basename, navigator } = React.useContext(NavigationContext);\r\n  let { hash, pathname, search } = useResolvedPath(to);\r\n\r\n  let joinedPathname = pathname;\r\n  if (basename !== \"/\") {\r\n    let toPathname = getToPathname(to);\r\n    let endsWithSlash = toPathname != null && toPathname.endsWith(\"/\");\r\n    joinedPathname =\r\n      pathname === \"/\"\r\n        ? basename + (endsWithSlash ? \"/\" : \"\")\r\n        : joinPaths([basename, pathname]);\r\n  }\r\n\r\n  return navigator.createHref({ pathname: joinedPathname, search, hash });\r\n}\r\n\r\n/**\r\n * Returns true if this component is a descendant of a <Router>.\r\n *\r\n * @see https://reactrouter.com/docs/en/v6/api#useinroutercontext\r\n */\r\nexport function useInRouterContext(): boolean {\r\n  return React.useContext(LocationContext) != null;\r\n}\r\n\r\n/**\r\n * Returns the current location object, which represents the current URL in web\r\n * browsers.\r\n *\r\n * Note: If you're using this it may mean you're doing some of your own\r\n * \"routing\" in your app, and we'd like to know what your use case is. We may\r\n * be able to provide something higher-level to better suit your needs.\r\n *\r\n * @see https://reactrouter.com/docs/en/v6/api#uselocation\r\n */\r\nexport function useLocation(): Location {\r\n  invariant(\r\n    useInRouterContext(),\r\n    // TODO: This error is probably because they somehow have 2 versions of the\r\n    // router loaded. We can help them understand how to avoid that.\r\n    `useLocation() may be used only in the context of a <Router> component.`\r\n  );\r\n\r\n  return React.useContext(LocationContext).location;\r\n}\r\n\r\ntype ParamParseFailed = { failed: true };\r\n\r\ntype ParamParseSegment<Segment extends string> =\r\n  // Check here if there exists a forward slash in the string.\r\n  Segment extends `${infer LeftSegment}/${infer RightSegment}`\r\n    ? // If there is a forward slash, then attempt to parse each side of the\r\n      // forward slash.\r\n      ParamParseSegment<LeftSegment> extends infer LeftResult\r\n      ? ParamParseSegment<RightSegment> extends infer RightResult\r\n        ? LeftResult extends string\r\n          ? // If the left side is successfully parsed as a param, then check if\r\n            // the right side can be successfully parsed as well. If both sides\r\n            // can be parsed, then the result is a union of the two sides\r\n            // (read: \"foo\" | \"bar\").\r\n            RightResult extends string\r\n            ? LeftResult | RightResult\r\n            : LeftResult\r\n          : // If the left side is not successfully parsed as a param, then check\r\n          // if only the right side can be successfully parse as a param. If it\r\n          // can, then the result is just right, else it's a failure.\r\n          RightResult extends string\r\n          ? RightResult\r\n          : ParamParseFailed\r\n        : ParamParseFailed\r\n      : // If the left side didn't parse into a param, then just check the right\r\n      // side.\r\n      ParamParseSegment<RightSegment> extends infer RightResult\r\n      ? RightResult extends string\r\n        ? RightResult\r\n        : ParamParseFailed\r\n      : ParamParseFailed\r\n    : // If there's no forward slash, then check if this segment starts with a\r\n    // colon. If it does, then this is a dynamic segment, so the result is\r\n    // just the remainder of the string. Otherwise, it's a failure.\r\n    Segment extends `:${infer Remaining}`\r\n    ? Remaining\r\n    : ParamParseFailed;\r\n\r\n// Attempt to parse the given string segment. If it fails, then just return the\r\n// plain string type as a default fallback. Otherwise return the union of the\r\n// parsed string literals that were referenced as dynamic segments in the route.\r\ntype ParamParseKey<Segment extends string> =\r\n  ParamParseSegment<Segment> extends string\r\n    ? ParamParseSegment<Segment>\r\n    : string;\r\n\r\n/**\r\n * Returns the current navigation action which describes how the router came to\r\n * the current location, either by a pop, push, or replace on the history stack.\r\n *\r\n * @see https://reactrouter.com/docs/en/v6/api#usenavigationtype\r\n */\r\nexport function useNavigationType(): NavigationType {\r\n  return React.useContext(LocationContext).navigationType;\r\n}\r\n\r\n/**\r\n * Returns true if the URL for the given \"to\" value matches the current URL.\r\n * This is useful for components that need to know \"active\" state, e.g.\r\n * <NavLink>.\r\n *\r\n * @see https://reactrouter.com/docs/en/v6/api#usematch\r\n */\r\nexport function useMatch<\r\n  ParamKey extends ParamParseKey<Path>,\r\n  Path extends string\r\n>(pattern: PathPattern<Path> | Path): PathMatch<ParamKey> | null {\r\n  invariant(\r\n    useInRouterContext(),\r\n    // TODO: This error is probably because they somehow have 2 versions of the\r\n    // router loaded. We can help them understand how to avoid that.\r\n    `useMatch() may be used only in the context of a <Router> component.`\r\n  );\r\n\r\n  let { pathname } = useLocation();\r\n  return React.useMemo(\r\n    () => matchPath<ParamKey, Path>(pattern, pathname),\r\n    [pathname, pattern]\r\n  );\r\n}\r\n\r\n/**\r\n * The interface for the navigate() function returned from useNavigate().\r\n */\r\nexport interface NavigateFunction {\r\n  (to: To, options?: NavigateOptions): void;\r\n  (delta: number): void;\r\n}\r\n\r\nexport interface NavigateOptions {\r\n  replace?: boolean;\r\n  state?: any;\r\n}\r\n\r\n/**\r\n * Returns an imperative method for changing the location. Used by <Link>s, but\r\n * may also be used by other elements to change the location.\r\n *\r\n * @see https://reactrouter.com/docs/en/v6/api#usenavigate\r\n */\r\nexport function useNavigate(): NavigateFunction {\r\n  invariant(\r\n    useInRouterContext(),\r\n    // TODO: This error is probably because they somehow have 2 versions of the\r\n    // router loaded. We can help them understand how to avoid that.\r\n    `useNavigate() may be used only in the context of a <Router> component.`\r\n  );\r\n\r\n  let { basename, navigator } = React.useContext(NavigationContext);\r\n  let { matches } = React.useContext(RouteContext);\r\n  let { pathname: locationPathname } = useLocation();\r\n\r\n  let routePathnamesJson = JSON.stringify(\r\n    matches.map(match => match.pathnameBase)\r\n  );\r\n\r\n  let activeRef = React.useRef(false);\r\n  React.useEffect(() => {\r\n    activeRef.current = true;\r\n  });\r\n\r\n  let navigate: NavigateFunction = React.useCallback(\r\n    (to: To | number, options: NavigateOptions = {}) => {\r\n      warning(\r\n        activeRef.current,\r\n        `You should call navigate() in a React.useEffect(), not when ` +\r\n          `your component is first rendered.`\r\n      );\r\n\r\n      if (!activeRef.current) return;\r\n\r\n      if (typeof to === \"number\") {\r\n        navigator.go(to);\r\n        return;\r\n      }\r\n\r\n      let path = resolveTo(\r\n        to,\r\n        JSON.parse(routePathnamesJson),\r\n        locationPathname\r\n      );\r\n\r\n      if (basename !== \"/\") {\r\n        path.pathname = joinPaths([basename, path.pathname]);\r\n      }\r\n\r\n      (!!options.replace ? navigator.replace : navigator.push)(\r\n        path,\r\n        options.state\r\n      );\r\n    },\r\n    [basename, navigator, routePathnamesJson, locationPathname]\r\n  );\r\n\r\n  return navigate;\r\n}\r\n\r\nconst OutletContext = React.createContext<unknown>(null);\r\n\r\n/**\r\n * Returns the context (if provided) for the child route at this level of the route\r\n * hierarchy.\r\n * @see https://reactrouter.com/docs/en/v6/api#useoutletcontext\r\n */\r\nexport function useOutletContext<Context = unknown>(): Context {\r\n  return React.useContext(OutletContext) as Context;\r\n}\r\n\r\n/**\r\n * Returns the element for the child route at this level of the route\r\n * hierarchy. Used internally by <Outlet> to render child routes.\r\n *\r\n * @see https://reactrouter.com/docs/en/v6/api#useoutlet\r\n */\r\nexport function useOutlet(context?: unknown): React.ReactElement | null {\r\n  let outlet = React.useContext(RouteContext).outlet;\r\n  if (outlet) {\r\n    return (\r\n      <OutletContext.Provider value={context}>{outlet}</OutletContext.Provider>\r\n    );\r\n  }\r\n  return outlet;\r\n}\r\n\r\n/**\r\n * Returns an object of key/value pairs of the dynamic params from the current\r\n * URL that were matched by the route path.\r\n *\r\n * @see https://reactrouter.com/docs/en/v6/api#useparams\r\n */\r\nexport function useParams<\r\n  ParamsOrKey extends string | Record<string, string | undefined> = string\r\n>(): Readonly<\r\n  [ParamsOrKey] extends [string] ? Params<ParamsOrKey> : Partial<ParamsOrKey>\r\n> {\r\n  let { matches } = React.useContext(RouteContext);\r\n  let routeMatch = matches[matches.length - 1];\r\n  return routeMatch ? (routeMatch.params as any) : {};\r\n}\r\n\r\n/**\r\n * Resolves the pathname of the given `to` value against the current location.\r\n *\r\n * @see https://reactrouter.com/docs/en/v6/api#useresolvedpath\r\n */\r\nexport function useResolvedPath(to: To): Path {\r\n  let { matches } = React.useContext(RouteContext);\r\n  let { pathname: locationPathname } = useLocation();\r\n\r\n  let routePathnamesJson = JSON.stringify(\r\n    matches.map(match => match.pathnameBase)\r\n  );\r\n\r\n  return React.useMemo(\r\n    () => resolveTo(to, JSON.parse(routePathnamesJson), locationPathname),\r\n    [to, routePathnamesJson, locationPathname]\r\n  );\r\n}\r\n\r\n/**\r\n * Returns the element of the route that matched the current location, prepared\r\n * with the correct context to render the remainder of the route tree. Route\r\n * elements in the tree must render an <Outlet> to render their child route's\r\n * element.\r\n *\r\n * @see https://reactrouter.com/docs/en/v6/api#useroutes\r\n */\r\nexport function useRoutes(\r\n  routes: RouteObject[],\r\n  locationArg?: Partial<Location> | string\r\n): React.ReactElement | null {\r\n  invariant(\r\n    useInRouterContext(),\r\n    // TODO: This error is probably because they somehow have 2 versions of the\r\n    // router loaded. We can help them understand how to avoid that.\r\n    `useRoutes() may be used only in the context of a <Router> component.`\r\n  );\r\n\r\n  let { matches: parentMatches } = React.useContext(RouteContext);\r\n  let routeMatch = parentMatches[parentMatches.length - 1];\r\n  let parentParams = routeMatch ? routeMatch.params : {};\r\n  let parentPathname = routeMatch ? routeMatch.pathname : \"/\";\r\n  let parentPathnameBase = routeMatch ? routeMatch.pathnameBase : \"/\";\r\n  let parentRoute = routeMatch && routeMatch.route;\r\n\r\n  if (__DEV__) {\r\n    // You won't get a warning about 2 different <Routes> under a <Route>\r\n    // without a trailing *, but this is a best-effort warning anyway since we\r\n    // cannot even give the warning unless they land at the parent route.\r\n    //\r\n    // Example:\r\n    //\r\n    // <Routes>\r\n    //   {/* This route path MUST end with /* because otherwise\r\n    //       it will never match /blog/post/123 */}\r\n    //   <Route path=\"blog\" element={<Blog />} />\r\n    //   <Route path=\"blog/feed\" element={<BlogFeed />} />\r\n    // </Routes>\r\n    //\r\n    // function Blog() {\r\n    //   return (\r\n    //     <Routes>\r\n    //       <Route path=\"post/:id\" element={<Post />} />\r\n    //     </Routes>\r\n    //   );\r\n    // }\r\n    let parentPath = (parentRoute && parentRoute.path) || \"\";\r\n    warningOnce(\r\n      parentPathname,\r\n      !parentRoute || parentPath.endsWith(\"*\"),\r\n      `You rendered descendant <Routes> (or called \\`useRoutes()\\`) at ` +\r\n        `\"${parentPathname}\" (under <Route path=\"${parentPath}\">) but the ` +\r\n        `parent route path has no trailing \"*\". This means if you navigate ` +\r\n        `deeper, the parent won't match anymore and therefore the child ` +\r\n        `routes will never render.\\n\\n` +\r\n        `Please change the parent <Route path=\"${parentPath}\"> to <Route ` +\r\n        `path=\"${parentPath === \"/\" ? \"*\" : `${parentPath}/*`}\">.`\r\n    );\r\n  }\r\n\r\n  let locationFromContext = useLocation();\r\n\r\n  let location;\r\n  if (locationArg) {\r\n    let parsedLocationArg =\r\n      typeof locationArg === \"string\" ? parsePath(locationArg) : locationArg;\r\n\r\n    invariant(\r\n      parentPathnameBase === \"/\" ||\r\n        parsedLocationArg.pathname?.startsWith(parentPathnameBase),\r\n      `When overriding the location using \\`<Routes location>\\` or \\`useRoutes(routes, location)\\`, ` +\r\n        `the location pathname must begin with the portion of the URL pathname that was ` +\r\n        `matched by all parent routes. The current pathname base is \"${parentPathnameBase}\" ` +\r\n        `but pathname \"${parsedLocationArg.pathname}\" was given in the \\`location\\` prop.`\r\n    );\r\n\r\n    location = parsedLocationArg;\r\n  } else {\r\n    location = locationFromContext;\r\n  }\r\n\r\n  let pathname = location.pathname || \"/\";\r\n  let remainingPathname =\r\n    parentPathnameBase === \"/\"\r\n      ? pathname\r\n      : pathname.slice(parentPathnameBase.length) || \"/\";\r\n  let matches = matchRoutes(routes, { pathname: remainingPathname });\r\n\r\n  if (__DEV__) {\r\n    warning(\r\n      parentRoute || matches != null,\r\n      `No routes matched location \"${location.pathname}${location.search}${location.hash}\" `\r\n    );\r\n\r\n    warning(\r\n      matches == null ||\r\n        matches[matches.length - 1].route.element !== undefined,\r\n      `Matched leaf route at location \"${location.pathname}${location.search}${location.hash}\" does not have an element. ` +\r\n        `This means it will render an <Outlet /> with a null value by default resulting in an \"empty\" page.`\r\n    );\r\n  }\r\n\r\n  return _renderMatches(\r\n    matches &&\r\n      matches.map(match =>\r\n        Object.assign({}, match, {\r\n          params: Object.assign({}, parentParams, match.params),\r\n          pathname: joinPaths([parentPathnameBase, match.pathname]),\r\n          pathnameBase:\r\n            match.pathnameBase === \"/\"\r\n              ? parentPathnameBase\r\n              : joinPaths([parentPathnameBase, match.pathnameBase])\r\n        })\r\n      ),\r\n    parentMatches\r\n  );\r\n}\r\n\r\n///////////////////////////////////////////////////////////////////////////////\r\n// UTILS\r\n///////////////////////////////////////////////////////////////////////////////\r\n\r\n/**\r\n * Creates a route config from a React \"children\" object, which is usually\r\n * either a `<Route>` element or an array of them. Used internally by\r\n * `<Routes>` to create a route config from its children.\r\n *\r\n * @see https://reactrouter.com/docs/en/v6/api#createroutesfromchildren\r\n */\r\nexport function createRoutesFromChildren(\r\n  children: React.ReactNode\r\n): RouteObject[] {\r\n  let routes: RouteObject[] = [];\r\n\r\n  React.Children.forEach(children, element => {\r\n    if (!React.isValidElement(element)) {\r\n      // Ignore non-elements. This allows people to more easily inline\r\n      // conditionals in their route config.\r\n      return;\r\n    }\r\n\r\n    if (element.type === React.Fragment) {\r\n      // Transparently support React.Fragment and its children.\r\n      routes.push.apply(\r\n        routes,\r\n        createRoutesFromChildren(element.props.children)\r\n      );\r\n      return;\r\n    }\r\n\r\n    invariant(\r\n      element.type === Route,\r\n      `[${\r\n        typeof element.type === \"string\" ? element.type : element.type.name\r\n      }] is not a <Route> component. All component children of <Routes> must be a <Route> or <React.Fragment>`\r\n    );\r\n\r\n    let route: RouteObject = {\r\n      caseSensitive: element.props.caseSensitive,\r\n      element: element.props.element,\r\n      index: element.props.index,\r\n      path: element.props.path\r\n    };\r\n\r\n    if (element.props.children) {\r\n      route.children = createRoutesFromChildren(element.props.children);\r\n    }\r\n\r\n    routes.push(route);\r\n  });\r\n\r\n  return routes;\r\n}\r\n\r\n/**\r\n * The parameters that were parsed from the URL path.\r\n */\r\nexport type Params<Key extends string = string> = {\r\n  readonly [key in Key]: string | undefined;\r\n};\r\n\r\n/**\r\n * A route object represents a logical route, with (optionally) its child\r\n * routes organized in a tree-like structure.\r\n */\r\nexport interface RouteObject {\r\n  caseSensitive?: boolean;\r\n  children?: RouteObject[];\r\n  element?: React.ReactNode;\r\n  index?: boolean;\r\n  path?: string;\r\n}\r\n\r\n/**\r\n * Returns a path with params interpolated.\r\n *\r\n * @see https://reactrouter.com/docs/en/v6/api#generatepath\r\n */\r\nexport function generatePath(path: string, params: Params = {}): string {\r\n  return path\r\n    .replace(/:(\\w+)/g, (_, key) => {\r\n      invariant(params[key] != null, `Missing \":${key}\" param`);\r\n      return params[key]!;\r\n    })\r\n    .replace(/\\/*\\*$/, _ =>\r\n      params[\"*\"] == null ? \"\" : params[\"*\"].replace(/^\\/*/, \"/\")\r\n    );\r\n}\r\n\r\n/**\r\n * A RouteMatch contains info about how a route matched a URL.\r\n */\r\nexport interface RouteMatch<ParamKey extends string = string> {\r\n  /**\r\n   * The names and values of dynamic parameters in the URL.\r\n   */\r\n  params: Params<ParamKey>;\r\n  /**\r\n   * The portion of the URL pathname that was matched.\r\n   */\r\n  pathname: string;\r\n  /**\r\n   * The portion of the URL pathname that was matched before child routes.\r\n   */\r\n  pathnameBase: string;\r\n  /**\r\n   * The route object that was used to match.\r\n   */\r\n  route: RouteObject;\r\n}\r\n\r\n/**\r\n * Matches the given routes to a location and returns the match data.\r\n *\r\n * @see https://reactrouter.com/docs/en/v6/api#matchroutes\r\n */\r\nexport function matchRoutes(\r\n  routes: RouteObject[],\r\n  locationArg: Partial<Location> | string,\r\n  basename = \"/\"\r\n): RouteMatch[] | null {\r\n  let location =\r\n    typeof locationArg === \"string\" ? parsePath(locationArg) : locationArg;\r\n\r\n  let pathname = stripBasename(location.pathname || \"/\", basename);\r\n\r\n  if (pathname == null) {\r\n    return null;\r\n  }\r\n\r\n  let branches = flattenRoutes(routes);\r\n  rankRouteBranches(branches);\r\n\r\n  let matches = null;\r\n  for (let i = 0; matches == null && i < branches.length; ++i) {\r\n    matches = matchRouteBranch(branches[i], pathname);\r\n  }\r\n\r\n  return matches;\r\n}\r\n\r\ninterface RouteMeta {\r\n  relativePath: string;\r\n  caseSensitive: boolean;\r\n  childrenIndex: number;\r\n  route: RouteObject;\r\n}\r\n\r\ninterface RouteBranch {\r\n  path: string;\r\n  score: number;\r\n  routesMeta: RouteMeta[];\r\n}\r\n\r\nfunction flattenRoutes(\r\n  routes: RouteObject[],\r\n  branches: RouteBranch[] = [],\r\n  parentsMeta: RouteMeta[] = [],\r\n  parentPath = \"\"\r\n): RouteBranch[] {\r\n  routes.forEach((route, index) => {\r\n    let meta: RouteMeta = {\r\n      relativePath: route.path || \"\",\r\n      caseSensitive: route.caseSensitive === true,\r\n      childrenIndex: index,\r\n      route\r\n    };\r\n\r\n    if (meta.relativePath.startsWith(\"/\")) {\r\n      invariant(\r\n        meta.relativePath.startsWith(parentPath),\r\n        `Absolute route path \"${meta.relativePath}\" nested under path ` +\r\n          `\"${parentPath}\" is not valid. An absolute child route path ` +\r\n          `must start with the combined path of all its parent routes.`\r\n      );\r\n\r\n      meta.relativePath = meta.relativePath.slice(parentPath.length);\r\n    }\r\n\r\n    let path = joinPaths([parentPath, meta.relativePath]);\r\n    let routesMeta = parentsMeta.concat(meta);\r\n\r\n    // Add the children before adding this route to the array so we traverse the\r\n    // route tree depth-first and child routes appear before their parents in\r\n    // the \"flattened\" version.\r\n    if (route.children && route.children.length > 0) {\r\n      invariant(\r\n        route.index !== true,\r\n        `Index routes must not have child routes. Please remove ` +\r\n          `all child routes from route path \"${path}\".`\r\n      );\r\n\r\n      flattenRoutes(route.children, branches, routesMeta, path);\r\n    }\r\n\r\n    // Routes without a path shouldn't ever match by themselves unless they are\r\n    // index routes, so don't add them to the list of possible branches.\r\n    if (route.path == null && !route.index) {\r\n      return;\r\n    }\r\n\r\n    branches.push({ path, score: computeScore(path, route.index), routesMeta });\r\n  });\r\n\r\n  return branches;\r\n}\r\n\r\nfunction rankRouteBranches(branches: RouteBranch[]): void {\r\n  branches.sort((a, b) =>\r\n    a.score !== b.score\r\n      ? b.score - a.score // Higher score first\r\n      : compareIndexes(\r\n          a.routesMeta.map(meta => meta.childrenIndex),\r\n          b.routesMeta.map(meta => meta.childrenIndex)\r\n        )\r\n  );\r\n}\r\n\r\nconst paramRe = /^:\\w+$/;\r\nconst dynamicSegmentValue = 3;\r\nconst indexRouteValue = 2;\r\nconst emptySegmentValue = 1;\r\nconst staticSegmentValue = 10;\r\nconst splatPenalty = -2;\r\nconst isSplat = (s: string) => s === \"*\";\r\n\r\nfunction computeScore(path: string, index: boolean | undefined): number {\r\n  let segments = path.split(\"/\");\r\n  let initialScore = segments.length;\r\n  if (segments.some(isSplat)) {\r\n    initialScore += splatPenalty;\r\n  }\r\n\r\n  if (index) {\r\n    initialScore += indexRouteValue;\r\n  }\r\n\r\n  return segments\r\n    .filter(s => !isSplat(s))\r\n    .reduce(\r\n      (score, segment) =>\r\n        score +\r\n        (paramRe.test(segment)\r\n          ? dynamicSegmentValue\r\n          : segment === \"\"\r\n          ? emptySegmentValue\r\n          : staticSegmentValue),\r\n      initialScore\r\n    );\r\n}\r\n\r\nfunction compareIndexes(a: number[], b: number[]): number {\r\n  let siblings =\r\n    a.length === b.length && a.slice(0, -1).every((n, i) => n === b[i]);\r\n\r\n  return siblings\r\n    ? // If two routes are siblings, we should try to match the earlier sibling\r\n      // first. This allows people to have fine-grained control over the matching\r\n      // behavior by simply putting routes with identical paths in the order they\r\n      // want them tried.\r\n      a[a.length - 1] - b[b.length - 1]\r\n    : // Otherwise, it doesn't really make sense to rank non-siblings by index,\r\n      // so they sort equally.\r\n      0;\r\n}\r\n\r\nfunction matchRouteBranch<ParamKey extends string = string>(\r\n  branch: RouteBranch,\r\n  pathname: string\r\n): RouteMatch<ParamKey>[] | null {\r\n  let { routesMeta } = branch;\r\n\r\n  let matchedParams = {};\r\n  let matchedPathname = \"/\";\r\n  let matches: RouteMatch[] = [];\r\n  for (let i = 0; i < routesMeta.length; ++i) {\r\n    let meta = routesMeta[i];\r\n    let end = i === routesMeta.length - 1;\r\n    let remainingPathname =\r\n      matchedPathname === \"/\"\r\n        ? pathname\r\n        : pathname.slice(matchedPathname.length) || \"/\";\r\n    let match = matchPath(\r\n      { path: meta.relativePath, caseSensitive: meta.caseSensitive, end },\r\n      remainingPathname\r\n    );\r\n\r\n    if (!match) return null;\r\n\r\n    Object.assign(matchedParams, match.params);\r\n\r\n    let route = meta.route;\r\n\r\n    matches.push({\r\n      params: matchedParams,\r\n      pathname: joinPaths([matchedPathname, match.pathname]),\r\n      pathnameBase: joinPaths([matchedPathname, match.pathnameBase]),\r\n      route\r\n    });\r\n\r\n    if (match.pathnameBase !== \"/\") {\r\n      matchedPathname = joinPaths([matchedPathname, match.pathnameBase]);\r\n    }\r\n  }\r\n\r\n  return matches;\r\n}\r\n\r\n/**\r\n * Renders the result of `matchRoutes()` into a React element.\r\n */\r\nexport function renderMatches(\r\n  matches: RouteMatch[] | null\r\n): React.ReactElement | null {\r\n  return _renderMatches(matches);\r\n}\r\n\r\nfunction _renderMatches(\r\n  matches: RouteMatch[] | null,\r\n  parentMatches: RouteMatch[] = []\r\n): React.ReactElement | null {\r\n  if (matches == null) return null;\r\n\r\n  return matches.reduceRight((outlet, match, index) => {\r\n    return (\r\n      <RouteContext.Provider\r\n        children={\r\n          match.route.element !== undefined ? match.route.element : <Outlet />\r\n        }\r\n        value={{\r\n          outlet,\r\n          matches: parentMatches.concat(matches.slice(0, index + 1))\r\n        }}\r\n      />\r\n    );\r\n  }, null as React.ReactElement | null);\r\n}\r\n\r\n/**\r\n * A PathPattern is used to match on some portion of a URL pathname.\r\n */\r\nexport interface PathPattern<Path extends string = string> {\r\n  /**\r\n   * A string to match against a URL pathname. May contain `:id`-style segments\r\n   * to indicate placeholders for dynamic parameters. May also end with `/*` to\r\n   * indicate matching the rest of the URL pathname.\r\n   */\r\n  path: Path;\r\n  /**\r\n   * Should be `true` if the static portions of the `path` should be matched in\r\n   * the same case.\r\n   */\r\n  caseSensitive?: boolean;\r\n  /**\r\n   * Should be `true` if this pattern should match the entire URL pathname.\r\n   */\r\n  end?: boolean;\r\n}\r\n\r\n/**\r\n * A PathMatch contains info about how a PathPattern matched on a URL pathname.\r\n */\r\nexport interface PathMatch<ParamKey extends string = string> {\r\n  /**\r\n   * The names and values of dynamic parameters in the URL.\r\n   */\r\n  params: Params<ParamKey>;\r\n  /**\r\n   * The portion of the URL pathname that was matched.\r\n   */\r\n  pathname: string;\r\n  /**\r\n   * The portion of the URL pathname that was matched before child routes.\r\n   */\r\n  pathnameBase: string;\r\n  /**\r\n   * The pattern that was used to match.\r\n   */\r\n  pattern: PathPattern;\r\n}\r\n\r\ntype Mutable<T> = {\r\n  -readonly [P in keyof T]: T[P];\r\n};\r\n\r\n/**\r\n * Performs pattern matching on a URL pathname and returns information about\r\n * the match.\r\n *\r\n * @see https://reactrouter.com/docs/en/v6/api#matchpath\r\n */\r\nexport function matchPath<\r\n  ParamKey extends ParamParseKey<Path>,\r\n  Path extends string\r\n>(\r\n  pattern: PathPattern<Path> | Path,\r\n  pathname: string\r\n): PathMatch<ParamKey> | null {\r\n  if (typeof pattern === \"string\") {\r\n    pattern = { path: pattern, caseSensitive: false, end: true };\r\n  }\r\n\r\n  let [matcher, paramNames] = compilePath(\r\n    pattern.path,\r\n    pattern.caseSensitive,\r\n    pattern.end\r\n  );\r\n\r\n  let match = pathname.match(matcher);\r\n  if (!match) return null;\r\n\r\n  let matchedPathname = match[0];\r\n  let pathnameBase = matchedPathname.replace(/(.)\\/+$/, \"$1\");\r\n  let captureGroups = match.slice(1);\r\n  let params: Params = paramNames.reduce<Mutable<Params>>(\r\n    (memo, paramName, index) => {\r\n      // We need to compute the pathnameBase here using the raw splat value\r\n      // instead of using params[\"*\"] later because it will be decoded then\r\n      if (paramName === \"*\") {\r\n        let splatValue = captureGroups[index] || \"\";\r\n        pathnameBase = matchedPathname\r\n          .slice(0, matchedPathname.length - splatValue.length)\r\n          .replace(/(.)\\/+$/, \"$1\");\r\n      }\r\n\r\n      memo[paramName] = safelyDecodeURIComponent(\r\n        captureGroups[index] || \"\",\r\n        paramName\r\n      );\r\n      return memo;\r\n    },\r\n    {}\r\n  );\r\n\r\n  return {\r\n    params,\r\n    pathname: matchedPathname,\r\n    pathnameBase,\r\n    pattern\r\n  };\r\n}\r\n\r\nfunction compilePath(\r\n  path: string,\r\n  caseSensitive = false,\r\n  end = true\r\n): [RegExp, string[]] {\r\n  warning(\r\n    path === \"*\" || !path.endsWith(\"*\") || path.endsWith(\"/*\"),\r\n    `Route path \"${path}\" will be treated as if it were ` +\r\n      `\"${path.replace(/\\*$/, \"/*\")}\" because the \\`*\\` character must ` +\r\n      `always follow a \\`/\\` in the pattern. To get rid of this warning, ` +\r\n      `please change the route path to \"${path.replace(/\\*$/, \"/*\")}\".`\r\n  );\r\n\r\n  let paramNames: string[] = [];\r\n  let regexpSource =\r\n    \"^\" +\r\n    path\r\n      .replace(/\\/*\\*?$/, \"\") // Ignore trailing / and /*, we'll handle it below\r\n      .replace(/^\\/*/, \"/\") // Make sure it has a leading /\r\n      .replace(/[\\\\.*+^$?{}|()[\\]]/g, \"\\\\$&\") // Escape special regex chars\r\n      .replace(/:(\\w+)/g, (_: string, paramName: string) => {\r\n        paramNames.push(paramName);\r\n        return \"([^\\\\/]+)\";\r\n      });\r\n\r\n  if (path.endsWith(\"*\")) {\r\n    paramNames.push(\"*\");\r\n    regexpSource +=\r\n      path === \"*\" || path === \"/*\"\r\n        ? \"(.*)$\" // Already matched the initial /, just match the rest\r\n        : \"(?:\\\\/(.+)|\\\\/*)$\"; // Don't include the / in params[\"*\"]\r\n  } else {\r\n    regexpSource += end\r\n      ? \"\\\\/*$\" // When matching to the end, ignore trailing slashes\r\n      : // Otherwise, match a word boundary or a proceeding /. The word boundary restricts\r\n        // parent routes to matching only their own words and nothing more, e.g. parent\r\n        // route \"/home\" should not match \"/home2\".\r\n        \"(?:\\\\b|\\\\/|$)\";\r\n  }\r\n\r\n  let matcher = new RegExp(regexpSource, caseSensitive ? undefined : \"i\");\r\n\r\n  return [matcher, paramNames];\r\n}\r\n\r\nfunction safelyDecodeURIComponent(value: string, paramName: string) {\r\n  try {\r\n    return decodeURIComponent(value);\r\n  } catch (error) {\r\n    warning(\r\n      false,\r\n      `The value for the URL param \"${paramName}\" will not be decoded because` +\r\n        ` the string \"${value}\" is a malformed URL segment. This is probably` +\r\n        ` due to a bad percent encoding (${error}).`\r\n    );\r\n\r\n    return value;\r\n  }\r\n}\r\n\r\n/**\r\n * Returns a resolved path object relative to the given pathname.\r\n *\r\n * @see https://reactrouter.com/docs/en/v6/api#resolvepath\r\n */\r\nexport function resolvePath(to: To, fromPathname = \"/\"): Path {\r\n  let {\r\n    pathname: toPathname,\r\n    search = \"\",\r\n    hash = \"\"\r\n  } = typeof to === \"string\" ? parsePath(to) : to;\r\n\r\n  let pathname = toPathname\r\n    ? toPathname.startsWith(\"/\")\r\n      ? toPathname\r\n      : resolvePathname(toPathname, fromPathname)\r\n    : fromPathname;\r\n\r\n  return {\r\n    pathname,\r\n    search: normalizeSearch(search),\r\n    hash: normalizeHash(hash)\r\n  };\r\n}\r\n\r\nfunction resolvePathname(relativePath: string, fromPathname: string): string {\r\n  let segments = fromPathname.replace(/\\/+$/, \"\").split(\"/\");\r\n  let relativeSegments = relativePath.split(\"/\");\r\n\r\n  relativeSegments.forEach(segment => {\r\n    if (segment === \"..\") {\r\n      // Keep the root \"\" segment so the pathname starts at /\r\n      if (segments.length > 1) segments.pop();\r\n    } else if (segment !== \".\") {\r\n      segments.push(segment);\r\n    }\r\n  });\r\n\r\n  return segments.length > 1 ? segments.join(\"/\") : \"/\";\r\n}\r\n\r\nfunction resolveTo(\r\n  toArg: To,\r\n  routePathnames: string[],\r\n  locationPathname: string\r\n): Path {\r\n  let to = typeof toArg === \"string\" ? parsePath(toArg) : toArg;\r\n  let toPathname = toArg === \"\" || to.pathname === \"\" ? \"/\" : to.pathname;\r\n\r\n  // If a pathname is explicitly provided in `to`, it should be relative to the\r\n  // route context. This is explained in `Note on `<Link to>` values` in our\r\n  // migration guide from v5 as a means of disambiguation between `to` values\r\n  // that begin with `/` and those that do not. However, this is problematic for\r\n  // `to` values that do not provide a pathname. `to` can simply be a search or\r\n  // hash string, in which case we should assume that the navigation is relative\r\n  // to the current location's pathname and *not* the route pathname.\r\n  let from: string;\r\n  if (toPathname == null) {\r\n    from = locationPathname;\r\n  } else {\r\n    let routePathnameIndex = routePathnames.length - 1;\r\n\r\n    if (toPathname.startsWith(\"..\")) {\r\n      let toSegments = toPathname.split(\"/\");\r\n\r\n      // Each leading .. segment means \"go up one route\" instead of \"go up one\r\n      // URL segment\".  This is a key difference from how <a href> works and a\r\n      // major reason we call this a \"to\" value instead of a \"href\".\r\n      while (toSegments[0] === \"..\") {\r\n        toSegments.shift();\r\n        routePathnameIndex -= 1;\r\n      }\r\n\r\n      to.pathname = toSegments.join(\"/\");\r\n    }\r\n\r\n    // If there are more \"..\" segments than parent routes, resolve relative to\r\n    // the root / URL.\r\n    from = routePathnameIndex >= 0 ? routePathnames[routePathnameIndex] : \"/\";\r\n  }\r\n\r\n  let path = resolvePath(to, from);\r\n\r\n  // Ensure the pathname has a trailing slash if the original to value had one.\r\n  if (\r\n    toPathname &&\r\n    toPathname !== \"/\" &&\r\n    toPathname.endsWith(\"/\") &&\r\n    !path.pathname.endsWith(\"/\")\r\n  ) {\r\n    path.pathname += \"/\";\r\n  }\r\n\r\n  return path;\r\n}\r\n\r\nfunction getToPathname(to: To): string | undefined {\r\n  // Empty strings should be treated the same as / paths\r\n  return to === \"\" || (to as Path).pathname === \"\"\r\n    ? \"/\"\r\n    : typeof to === \"string\"\r\n    ? parsePath(to).pathname\r\n    : to.pathname;\r\n}\r\n\r\nfunction stripBasename(pathname: string, basename: string): string | null {\r\n  if (basename === \"/\") return pathname;\r\n\r\n  if (!pathname.toLowerCase().startsWith(basename.toLowerCase())) {\r\n    return null;\r\n  }\r\n\r\n  let nextChar = pathname.charAt(basename.length);\r\n  if (nextChar && nextChar !== \"/\") {\r\n    // pathname does not start with basename/\r\n    return null;\r\n  }\r\n\r\n  return pathname.slice(basename.length) || \"/\";\r\n}\r\n\r\nconst joinPaths = (paths: string[]): string =>\r\n  paths.join(\"/\").replace(/\\/\\/+/g, \"/\");\r\n\r\nconst normalizePathname = (pathname: string): string =>\r\n  pathname.replace(/\\/+$/, \"\").replace(/^\\/*/, \"/\");\r\n\r\nconst normalizeSearch = (search: string): string =>\r\n  !search || search === \"?\"\r\n    ? \"\"\r\n    : search.startsWith(\"?\")\r\n    ? search\r\n    : \"?\" + search;\r\n\r\nconst normalizeHash = (hash: string): string =>\r\n  !hash || hash === \"#\" ? \"\" : hash.startsWith(\"#\") ? hash : \"#\" + hash;\r\n\r\n///////////////////////////////////////////////////////////////////////////////\r\n// DANGER! PLEASE READ ME!\r\n// We provide these exports as an escape hatch in the event that you need any\r\n// routing data that we don't provide an explicit API for. With that said, we\r\n// want to cover your use case if we can, so if you feel the need to use these\r\n// we want to hear from you. Let us know what you're building and we'll do our\r\n// best to make sure we can support you!\r\n//\r\n// We consider these exports an implementation detail and do not guarantee\r\n// against any breaking changes, regardless of the semver release. Use with\r\n// extreme caution and only if you understand the consequences. Godspeed.\r\n///////////////////////////////////////////////////////////////////////////////\r\n\r\n/** @internal */\r\nexport {\r\n  NavigationContext as UNSAFE_NavigationContext,\r\n  LocationContext as UNSAFE_LocationContext,\r\n  RouteContext as UNSAFE_RouteContext\r\n};\r\n"],"names":["invariant","cond","message","Error","warning","console","warn","e","alreadyWarned","warningOnce","key","NavigationContext","React","displayName","LocationContext","RouteContext","outlet","matches","MemoryRouter","basename","children","initialEntries","initialIndex","historyRef","current","createMemoryHistory","history","state","setState","action","location","listen","React.createElement","Navigate","to","replace","useInRouterContext","static","navigate","useNavigate","Outlet","props","useOutlet","context","Route","_props","Router","basenameProp","locationProp","navigationType","NavigationType","Pop","navigator","staticProp","normalizePathname","navigationContext","parsePath","pathname","search","hash","trailingPathname","stripBasename","Routes","useRoutes","createRoutesFromChildren","useHref","useResolvedPath","joinedPathname","toPathname","getToPathname","endsWithSlash","endsWith","joinPaths","createHref","useLocation","useNavigationType","useMatch","pattern","matchPath","locationPathname","routePathnamesJson","JSON","stringify","map","match","pathnameBase","activeRef","options","go","path","resolveTo","parse","push","OutletContext","useOutletContext","useParams","routeMatch","length","params","routes","locationArg","parentMatches","parentParams","parentPathname","parentPathnameBase","parentRoute","route","parentPath","locationFromContext","parsedLocationArg","startsWith","remainingPathname","slice","matchRoutes","element","undefined","_renderMatches","Object","assign","forEach","type","apply","name","caseSensitive","index","generatePath","_","branches","flattenRoutes","rankRouteBranches","i","matchRouteBranch","parentsMeta","meta","relativePath","childrenIndex","routesMeta","concat","score","computeScore","sort","a","b","compareIndexes","paramRe","dynamicSegmentValue","indexRouteValue","emptySegmentValue","staticSegmentValue","splatPenalty","isSplat","s","segments","split","initialScore","some","filter","reduce","segment","test","siblings","every","n","branch","matchedParams","matchedPathname","end","renderMatches","reduceRight","matcher","paramNames","compilePath","captureGroups","memo","paramName","splatValue","safelyDecodeURIComponent","regexpSource","RegExp","value","decodeURIComponent","error","resolvePath","fromPathname","resolvePathname","normalizeSearch","normalizeHash","relativeSegments","pop","join","toArg","routePathnames","from","routePathnameIndex","toSegments","shift","toLowerCase","nextChar","charAt","paths"],"mappings":"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"}